{"version":3,"sources":["context/jiraContext.js","components/JiraDisplay.js","components/JiraForm.js","components/JiraTicket.js","App.js","index.js"],"names":["jiraContext","createContext","formInitialState","ticket","remarks","prority","date","reporter","JiraProvider","children","useState","formData","setFormData","show","setShow","saved","localStorage","getItem","JSON","parse","jiraData","setJiraData","fillData","setFillData","Provider","value","JiraDisplay","useContext","useEffect","length","displayData","Fragment","className","sort","a","b","Date","map","d","style","issue","toLowerCase","border","boxShadow","slice","moment","format","href","onClick","id","findData","filter","window","confirm","handleDelete","findUpdate","find","data","updateId","handleUpdate","JiraForm","ref","useRef","formToggle","setFormToggle","current","display","setItem","stringify","handleChange","event","target","name","class","type","placeholder","onChange","rows","cols","preventDefault","updateData","uuidv4","JiraTicket","issueArr","background","issueType","handleIssue","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.91786ad2.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\nexport const jiraContext = createContext();\n\nconst formInitialState = {\n  ticket: \"\",\n  remarks: \"\",\n  prority: \"\",\n  date: \"\",\n  reporter: \"\"\n};\n\nconst JiraProvider = ({ children }) => {\n  const [formData, setFormData] = useState(formInitialState);\n  const [show, setShow] = useState(false);\n  const [jiraData, setJiraData] = useState(() => {\n    const saved = localStorage.getItem(\"jira\");\n    const initialValue = JSON.parse(saved);\n    return initialValue || [];\n  });\n  const [fillData, setFillData] = useState([]);\n\n  return (\n    <jiraContext.Provider\n      value={{\n        formInitialState,\n        formData,\n        setFormData,\n        jiraData,\n        setJiraData,\n        fillData,\n        setFillData,\n        show,\n        setShow\n      }}\n    >\n      {children}\n    </jiraContext.Provider>\n  );\n};\n\nexport default JiraProvider;\n","import React, { useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jiraContext } from \"../context/jiraContext\";\n\nconst JiraDisplay = () => {\n  const {\n    jiraData,\n    setJiraData,\n    setFormData,\n    fillData,\n    show,\n    setShow\n  } = useContext(jiraContext);\n\n  useEffect(() => {\n    if (fillData.length) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  }, [fillData]);\n\n  const handleDelete = (id) => {\n    const findData = jiraData.filter((d) => d.id !== id);\n    if (window.confirm(\"Are you sure to delete issue\")) {\n      setJiraData(findData);\n    }\n  };\n\n  const handleUpdate = (id) => {\n    const findUpdate = jiraData.find((d) => d.id === id);\n    const data = {\n      updateId: id,\n      ...findUpdate\n    };\n    setFormData(data);\n  };\n\n  const borderStyle = (issue) => {\n    if (issue === \"critical\") {\n      return { border: \"2px solid red\", boxShadow: \"0 0 10px red\" };\n    } else if (issue === \"major\") {\n      return { border: \"2px solid orange\", boxShadow: \"0 0 10px orange\" };\n    } else {\n      return { border: \"2px solid green\", boxShadow: \"0 0 10px green\" };\n    }\n  };\n\n  const displayData = show ? fillData : jiraData;\n\n  return (\n    <React.Fragment>\n      <div className=\"main-container\">\n        {jiraData &&\n          displayData\n            .sort((a, b) => new Date(b.date) - new Date(a.date))\n            .map((d) => {\n              return (\n                <div\n                  style={borderStyle(d.prority.toLowerCase())}\n                  key={d.id}\n                  className=\"display-card\"\n                >\n                  <h4>\n                    {d.ticket.slice(-9)} - {moment(d.date).format(\"ll\")}\n                  </h4>\n                  <a href={d.ticket}>\n                    <h4>{d.ticket}</h4>\n                  </a>\n                  <p>{d.remarks}</p>\n                  <b>{d.prority}</b>\n                  <br />\n                  <br />\n                  <b>Report To:-</b> {d.reporter}\n                  <div className=\"delete-btn\">\n                    <button onClick={() => handleDelete(d.id)}>Delete</button>\n                    <button onClick={() => handleUpdate(d.id)}>Update</button>\n                  </div>\n                </div>\n              );\n            })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default JiraDisplay;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { jiraContext } from \"../context/jiraContext\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst JiraForm = () => {\n  const {\n    formData,\n    setFormData,\n    formInitialState,\n    jiraData,\n    setJiraData,\n    setShow\n  } = useContext(jiraContext);\n  const ref = useRef();\n  const [formToggle, setFormToggle] = useState(false);\n\n  useEffect(() => {\n    ref.current.style.display = \"none\";\n    localStorage.setItem(\"jira\", JSON.stringify(jiraData));\n  }, [jiraData]);\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleDisplay = () => {\n    setFormToggle(!formToggle);\n    if (formToggle) {\n      ref.current.style.display = \"none\";\n    } else {\n      ref.current.style.display = \"block\";\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (formData.updateId) {\n      const updateData = jiraData.map((d) => {\n        if (d.id === formData.updateId) {\n          return { ...d, ...formData };\n        }\n        return d;\n      });\n      setJiraData(updateData);\n      setFormData(formInitialState);\n    } else {\n      const data = {\n        id: uuidv4(),\n        ...formData\n      };\n      setJiraData([...jiraData, data]);\n      setFormData(formInitialState);\n      setShow(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div class=\"form-main-first\">\n        <div>\n          <button onClick={handleDisplay}>\n            {formToggle ? \"Close Form\" : \"Open Form\"}\n          </button>\n        </div>\n        <div ref={ref} className=\"dropdown-menu\">\n          <form>\n            <input\n              type=\"text\"\n              placeholder=\"Enter the ticket details\"\n              name=\"ticket\"\n              value={formData.ticket}\n              onChange={handleChange}\n            />\n            <select\n              value={formData.prority}\n              name=\"prority\"\n              onChange={handleChange}\n            >\n              <option value=\"\"></option>\n              <option value=\"critical\">critical</option>\n              <option value=\"major\">major</option>\n              <option value=\"minor\">minor</option>\n            </select>\n            {/* <input\n              type=\"text\"\n              placeholder=\"Enter the priority\"\n              name=\"prority\"\n              value={formData.prority}\n              onChange={handleChange}\n            /> */}\n            <input\n              type=\"date\"\n              placeholder=\"Enter the date\"\n              name=\"date\"\n              value={formData.date}\n              onChange={handleChange}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter the reporter name\"\n              name=\"reporter\"\n              value={formData.reporter}\n              onChange={handleChange}\n            />\n            <textarea\n              placeholder=\"Enter the remarks\"\n              name=\"remarks\"\n              value={formData.remarks}\n              onChange={handleChange}\n              rows=\"10\"\n              cols=\"41\"\n            />\n            <input\n              onClick={handleSubmit}\n              type=\"submit\"\n              value={formData.updateId ? \"Update\" : \"Submit\"}\n            />\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default JiraForm;\n","import React, { useContext } from \"react\";\r\nimport { jiraContext } from \"../context/jiraContext\";\r\n\r\nconst JiraTicket = () => {\r\n  const { setFillData, jiraData } = useContext(jiraContext);\r\n  const issueArr = [\"issues\", \"critical\", \"major\", \"minor\"];\r\n\r\n  const handleIssue = (issueType) => {\r\n    let data;\r\n    switch (issueType) {\r\n      case \"critical\":\r\n        data = jiraData.filter((d) => d.prority === issueType);\r\n        break;\r\n      case \"major\":\r\n        data = jiraData.filter((d) => d.prority === issueType);\r\n        break;\r\n      case \"minor\":\r\n        data = jiraData.filter((d) => d.prority === issueType);\r\n        break;\r\n      default:\r\n        data = jiraData;\r\n        break;\r\n    }\r\n    setFillData(data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"issue-btn\">\r\n        {issueArr &&\r\n          issueArr.map((d) => {\r\n            return (\r\n              <button\r\n                style={{ background: `${d === \"critical\" && \"red\" || d === \"major\" && \"orange\" || d === \"minor\" && \"green\" || d === \"issues\" && \"Blue\" }` }}\r\n                onClick={() => handleIssue(d)}\r\n              >\r\n                {d}\r\n              </button>\r\n            );\r\n          })}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default JiraTicket;\r\n","import React from \"react\";\nimport JiraDisplay from \"./components/JiraDisplay\";\nimport JiraForm from \"./components/JiraForm\";\nimport JiraTicket from \"./components/JiraTicket\";\nimport JiraProvider from \"./context/jiraContext\";\nimport \"./styles.css\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <JiraProvider>\n        <div className=\"app-main\">\n          <JiraForm />\n        </div>\n        <JiraTicket />\n        <JiraDisplay />\n      </JiraProvider>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}